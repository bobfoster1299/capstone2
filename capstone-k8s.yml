Description:
  Robert Foster
  Udacity / Capstone
  K8s

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resources
    Type: String

Resources:

  EC2K8s1: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-01ed306a12b7d1c96"
      InstanceType: "t2.micro"
      Tags:
        - Key: Name
          Value : !Sub ${EnvironmentName}-k8s-1
      KeyName: "capstone-keypair"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
          - Ref: K8sSecGroup
          SubnetId: 
            Fn::ImportValue: !Sub ${EnvironmentName}-publicsubnet1-id
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash
            setenforce 0
            sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
            modprobe br_netfilter
            echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
            grep -F -v swap /etc/fstab > /etc/fstab.tmp && mv -f /etc/fstab.tmp /etc/fstab
            swapoff -a
            yum install -y yum-utils
            yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            yum install -y docker-ce
            sed -i '/^ExecStart/ s/$/ --exec-opt native.cgroupdriver=systemd/' /usr/lib/systemd/system/docker.service 
            systemctl daemon-reload
            systemctl enable docker --now
            cat << EOF > /etc/yum.repos.d/kubernetes.repo
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=0
            repo_gpgcheck=0
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            EOF
            yum install -y kubelet kubeadm kubectl
            systemctl enable kubelet
            echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
            kubeadm --ignore-preflight-errors=all init --pod-network-cidr=10.244.0.0/16
            mkdir -p $HOME/.kube
            sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
            sudo chown $(id -u):$(id -g) $HOME/.kube/config
            kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

  EC2K8s2: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-01ed306a12b7d1c96"
      InstanceType: "t2.micro"
      Tags:
        - Key: Name
          Value : !Sub ${EnvironmentName}-k8s-2
      KeyName: "capstone-keypair"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
          - Ref: K8sSecGroup
          SubnetId: 
            Fn::ImportValue: !Sub ${EnvironmentName}-publicsubnet1-id
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash
            setenforce 0
            sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
            modprobe br_netfilter
            echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
            grep -F -v swap /etc/fstab > /etc/fstab.tmp && mv -f /etc/fstab.tmp /etc/fstab
            swapoff -a
            yum install -y yum-utils
            yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            yum install -y docker-ce
            sed -i '/^ExecStart/ s/$/ --exec-opt native.cgroupdriver=systemd/' /usr/lib/systemd/system/docker.service 
            systemctl daemon-reload
            systemctl enable docker --now
            cat << EOF > /etc/yum.repos.d/kubernetes.repo
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=0
            repo_gpgcheck=0
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            EOF
            yum install -y kubelet kubeadm kubectl
            systemctl enable kubelet
            echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

  EC2K8s3: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-01ed306a12b7d1c96"
      InstanceType: "t2.micro"
      Tags:
        - Key: Name
          Value : !Sub ${EnvironmentName}-k8s-3
      KeyName: "capstone-keypair"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
          - Ref: K8sSecGroup
          SubnetId: 
            Fn::ImportValue: !Sub ${EnvironmentName}-publicsubnet1-id
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash
            setenforce 0
            sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
            modprobe br_netfilter
            echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
            grep -F -v swap /etc/fstab > /etc/fstab.tmp && mv -f /etc/fstab.tmp /etc/fstab
            swapoff -a
            yum install -y yum-utils
            yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            yum install -y docker-ce
            sed -i '/^ExecStart/ s/$/ --exec-opt native.cgroupdriver=systemd/' /usr/lib/systemd/system/docker.service 
            systemctl daemon-reload
            systemctl enable docker --now
            cat << EOF > /etc/yum.repos.d/kubernetes.repo
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=0
            repo_gpgcheck=0
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            EOF
            yum install -y kubelet kubeadm kubectl
            systemctl enable kubelet
            echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

  K8sSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow access to K8s
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-vpc-id
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 146.199.83.97/32
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 157.140.121.86/32
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 10.4.0.0/24
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName}-k8s-sg
      GroupName: !Sub ${EnvironmentName}-k8s-sg
  
 
